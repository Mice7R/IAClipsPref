/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iaclipspref;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author debian
 */
public class IAClips extends javax.swing.JFrame {

	/**
	 * Creates new form IAClips
	 */
	public IAClips()
	{
		initComponents();
		loadinstances("instances.pins");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        nsfw = new javax.swing.JCheckBox();
        polemicos = new javax.swing.JCheckBox();
        toxos = new javax.swing.JCheckBox();
        puntiaciones = new javax.swing.JCheckBox();
        moda = new javax.swing.JCheckBox();
        clasicos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        GenerosTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        EscritoresTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        LibrosTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor de Preferencias");

        nsfw.setText("Considerar libros NSFW");

        polemicos.setText("Considerar libros polemicos");

        toxos.setText("Considerar libros con mas de 400 paginas");

        puntiaciones.setText("Considerar puntuaciones de los libros");

        moda.setText("Preferir libros de moda");

        clasicos.setText("Preferir clasicos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nsfw)
                    .addComponent(polemicos)
                    .addComponent(toxos)
                    .addComponent(puntiaciones)
                    .addComponent(moda)
                    .addComponent(clasicos))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nsfw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(polemicos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(toxos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntiaciones)
                .addGap(4, 4, 4)
                .addComponent(moda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clasicos)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Preguntas", jPanel1);

        GenerosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Nombre", "Relevancia", "Moda", "Clasico"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GenerosTable);

        jTabbedPane1.addTab("Generos", jScrollPane1);

        EscritoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Nombre", "Relevancia", "Moda", "Clasico"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(EscritoresTable);

        jTabbedPane1.addTab("Escritores", jScrollPane2);

        LibrosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Nombre", "Relevancia", "Moda", "Clasico"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Float.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(LibrosTable);

        jTabbedPane1.addTab("Libros", jScrollPane3);

        jButton1.setText("Generar Hechos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(IAClips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(IAClips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(IAClips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(IAClips.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run()
			{
				new IAClips().setVisible(true);
			}
		});
	}

	private void loadinstances(String path)
	{
		Pattern instancefinder;
		instancefinder = Pattern.compile("\\(\\[(\\w+)\\] of (\\w+)");
		Matcher m;
		try
		{
			File file = new File(path);
			FileReader filereader = new FileReader(file);
			BufferedReader buffer = new BufferedReader(filereader);
			String line;
			while ((line = buffer.readLine()) != null)
			{
				m = instancefinder.matcher(line);
				if ( m.find() )
				{
					DefaultTableModel model;
					if ("Genero".equals(m.group(2)))
					{
						model = (DefaultTableModel) GenerosTable.getModel();
					} else if ("Escritor".equals(m.group(2)))
					{
						model = (DefaultTableModel) EscritoresTable.getModel();
					} else if ("Libro".equals(m.group(2)))
					{
						model = (DefaultTableModel) LibrosTable.getModel();
					} else continue;
					model.addRow(new Object[]
					{
						m.group(1), 1.0, false, false
					});
				}
			}
		} catch (FileNotFoundException ex)
		{
			Logger.getLogger(IAClips.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IOException ex)
		{
			Logger.getLogger(IAClips.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EscritoresTable;
    private javax.swing.JTable GenerosTable;
    private javax.swing.JTable LibrosTable;
    private javax.swing.JCheckBox clasicos;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox moda;
    private javax.swing.JCheckBox nsfw;
    private javax.swing.JCheckBox polemicos;
    private javax.swing.JCheckBox puntiaciones;
    private javax.swing.JCheckBox toxos;
    // End of variables declaration//GEN-END:variables
}
